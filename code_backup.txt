
/****************************
> node lib/install.js

  âš  The `/var/www/html/your-project/node_modules/mozjpeg/vendor/cjpeg` binary doesn't seem to work correctly
  âš  mozjpeg pre-build test failed
  â„¹ compiling from source
  âœ– Error: autoreconf -fiv && ./configure --disable-shared --disable-dependency-tracking --with-jpeg8  --prefix="/var/www/html/your-project/node_modules/mozjpeg/vendor" --bindir="/var/www/html/your-project/node_modules/mozjpeg/vendor" --libdir="/var/www/html/your-project/node_modules/mozjpeg/vendor" && make -j1 && make install -j1
Command failed: autoreconf -fiv
/bin/sh: 1: autoreconf: not found

    at ChildProcess.exithandler (child_process.js:272:12)
    at ChildProcess.emit (events.js:127:13)
    at maybeClose (internal/child_process.js:933:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:220:5)


/*********************/
        "bootstrap-sass": "^3.3.7",
        "lodash": "^4.17.4",
        "jquery": "^3.2",

/************************/
ubuntu@ip-172-31-84-242:/var/www/html/your-project$ git status
On branch master
Your branch and 'origin/master' have diverged,
and have 2 and 1 different commit each, respectively.
  (use "git pull" to merge the remote branch into yours)
You have unmerged paths.
  (fix conflicts and run "git commit")

Changes to be committed:

	new file:   database/migrations/2018_02_01_235513_create_bears_table.php
	new file:   routes/.api.php.swp

Unmerged paths:
  (use "git add <file>..." to mark resolution)

	both added:      app/Providers/AppServiceProvider.php
	both added:      app/User.php
	both added:      database/factories/UserFactory.php
	both added:      database/migrations/2014_10_12_000000_create_users_table.php
	both added:      database/seeds/DatabaseSeeder.php
	both added:      readme.md
	both added:      routes/web.php



/************************/
	public function scopeCastellano($query) {
		return  $query
			->where("categorie_id", "=", 1);//1: castellano-espaÃa, 2: castellano-bolivia, 3: castellano-mexico, 4: english-usa
	}

	// 1 = espaÃ±ol, 2 = english.
	public function scopePostsLanguage($query, $language_id) {
			dd($query, $language_id);
	 	$categorie_id = 1;	
		return  $query
			->where("id", "=", $categorie_id)
			->where("category_language_label", "=", $language_id);//1: castellano-espaÃa, 2: castellano-bolivia, 3: castellano-mexico, 4: english-usa
	}


	/* Logica muy complicada de generar categorias de idiomas
	$category = Category::get();
	$count= 1;
	factory(Language::class, 4)->create()->each(
		function ($language) use($category){
		//$category = ;
		$language->categories()->sync(1);
		$count = $count + 1;
	});
	*/



		// Factory Comment
	$posts = Post::get();//$posts->first()->id,$posts->last()->id)
	dd(Post::inRandomOrder()->get()->first()->id);
	//$autor_id = rand(3,6);
	//$post_id = rand(3,6);
	//$posts_random = $posts->random(rand(3,6));
	//var_dump($posts->first()->id);
	//var_dump($posts->last()->id);
